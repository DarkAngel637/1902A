{"ast":null,"code":"var _jsxFileName = \"/Users/MJ/web/project/1902A/react-redux-demo/src/components/Num.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Num extends Component {\n  render() {\n    // //1. 从store中拿状态的唯一方法，getState\n    // console.log('store state...', store.getState());\n    // let state = store.getState();\n    console.log('props...', this.props);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"\\u5F53\\u524D\\u6570\\u5B57\\uFF1A\", this.props.num]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n} // connect作为高阶组件，帮助我们注入redux的store，有四个参数\n// 1. mapStateToProps\n\n\nconst mapStateToProps = state => {\n  return {\n    num: state.num.num\n  };\n};\n\nexport default connect(mapStateToProps)(Num);","map":{"version":3,"sources":["/Users/MJ/web/project/1902A/react-redux-demo/src/components/Num.js"],"names":["React","Component","connect","Num","render","console","log","props","num","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AACxBG,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKC,KAA7B;AAEA,wBACI;AAAA,6BACI;AAAA,qDAAY,KAAKA,KAAL,CAAWC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAbuB,C,CAgB5B;AACA;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAS;AAC7B,SAAO;AACHF,IAAAA,GAAG,EAAEE,KAAK,CAACF,GAAN,CAAUA;AADZ,GAAP;AAGH,CAJD;;AAKA,eAAeN,OAAO,CAACO,eAAD,CAAP,CAAyBN,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nclass Num extends Component {\n    render() {\n        // //1. 从store中拿状态的唯一方法，getState\n        // console.log('store state...', store.getState());\n        // let state = store.getState();\n\n        console.log('props...', this.props)\n\n        return (\n            <div>\n                <span>当前数字：{this.props.num}</span>\n            </div>\n        )\n    }\n}\n\n// connect作为高阶组件，帮助我们注入redux的store，有四个参数\n// 1. mapStateToProps\nconst mapStateToProps = (state)=>{\n    return {\n        num: state.num.num\n    }\n}\nexport default connect(mapStateToProps)(Num)"]},"metadata":{},"sourceType":"module"}