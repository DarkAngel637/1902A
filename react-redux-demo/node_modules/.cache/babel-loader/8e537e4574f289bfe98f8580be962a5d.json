{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\n/**\n * 迭代函数，state是上一次的状态，action是修改它对行为\n * 在reducer里面禁止使用JSON.stringify和JSON.parse\n * 所有的深拷贝通过es6实现\n * action{ type: '', payload: '' }\n *  */\n// function reducer(state, action){\n//     console.log('old state...', state);\n//     switch(action.type){\n//         case 'ADD': \n//             return {...state, num: state.num+1};\n//         case 'SUB':\n//             return {...state, num: state.num-1};\n//         default:\n//             return state;\n//     }\n// }\n// 引入子reducer\n\nimport cart from './reducers/cart';\nimport home from './reducers/home';\nimport num from './reducers/num'; // 合并子reducer开启命名空间，防止属性之间相互影响\n\nlet reducer = combineReducers({\n  cart,\n  home,\n  num\n}); // newState = reducer(oldState, action);\n// redux-logger中间件记录redux的数据改变，方便调试\n\nconst store = createStore(reducer, applyMiddleware(createLogger()));\nexport default store;","map":{"version":3,"sources":["/Users/MJ/web/project/1902A/react-redux-demo/src/store/index.js"],"names":["createStore","combineReducers","applyMiddleware","createLogger","cart","home","num","reducer","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAAQC,YAAR,QAA2B,cAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,GAAP,MAAgB,gBAAhB,C,CAEA;;AACA,IAAIC,OAAO,GAAGN,eAAe,CAAC;AAC1BG,EAAAA,IAD0B;AAE1BC,EAAAA,IAF0B;AAG1BC,EAAAA;AAH0B,CAAD,CAA7B,C,CAOA;AACA;;AACA,MAAME,KAAK,GAAGR,WAAW,CAACO,OAAD,EAAUL,eAAe,CAACC,YAAY,EAAb,CAAzB,CAAzB;AAEA,eAAeK,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\nimport {createLogger} from 'redux-logger'\n\n/**\n * 迭代函数，state是上一次的状态，action是修改它对行为\n * 在reducer里面禁止使用JSON.stringify和JSON.parse\n * 所有的深拷贝通过es6实现\n * action{ type: '', payload: '' }\n *  */ \n// function reducer(state, action){\n//     console.log('old state...', state);\n//     switch(action.type){\n//         case 'ADD': \n//             return {...state, num: state.num+1};\n//         case 'SUB':\n//             return {...state, num: state.num-1};\n//         default:\n//             return state;\n//     }\n// }\n// 引入子reducer\nimport cart from './reducers/cart'\nimport home from './reducers/home'\nimport num from './reducers/num'\n\n// 合并子reducer开启命名空间，防止属性之间相互影响\nlet reducer = combineReducers({\n    cart,\n    home,\n    num\n})\n\n\n// newState = reducer(oldState, action);\n// redux-logger中间件记录redux的数据改变，方便调试\nconst store = createStore(reducer, applyMiddleware(createLogger()));\n\nexport default store;"]},"metadata":{},"sourceType":"module"}